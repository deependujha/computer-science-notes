# Project information
site_name: Computer Science notes 🧑🏻‍💻
site_url: https://deependujha.github.io/computer-science-notes
site_author: Deependu Jha
site_description: >-
  This is a collection of notes on Computer Science concepts and interview questions for quick revision.
# Repository
repo_name: deependujha/computer-science-notes
repo_url: https://github.com/deependujha/computer-science-notes

# Copyright
copyright: Copyright &copy; 2024 Deependu Jha

extra_css:
  - stylesheets/my-style.css

# Configuration
theme:
  name: material
  features:
    # - announce.dismiss
    # - content.action.edit
    # - content.action.view
    # - content.code.annotate
    - content.code.copy
    # - content.code.select
    # - content.footnote.tooltips
    # - content.tabs.link
    - content.tooltips
    # - header.autohide
    # - navigation.expand
    - navigation.footer
    - navigation.indexes
    # - navigation.instant
    # - navigation.instant.prefetch
    # - navigation.instant.progress
    # - navigation.prune
    - navigation.sections # comment this if you want `navigation expansion and collapse`
    - navigation.tabs
    # - navigation.tabs.sticky
    - navigation.top
    - navigation.tracking
    - search.highlight
    - search.share
    - search.suggest
    - toc.follow
    # - toc.integrate
  palette:
    - scheme: default
      primary: pink
      accent: pink
      toggle:
        icon: material/toggle-switch
        name: Switch to dark mode
    - scheme: slate
      primary: black
      accent: indigo
      toggle:
        icon: material/toggle-switch-off
        name: Switch to light mode
  font:
    text: Roboto
    code: Roboto Mono
  favicon: images/assets/favicon.png
  logo: images/assets/favicon.png

# Additional configuration
extra:
  social:
    - icon: fontawesome/brands/github
      link: https://github.com/deependujha
    - icon: fontawesome/brands/twitter
      link: https://twitter.com/deependu__
    - icon: fontawesome/brands/telegram
      link: https://t.me/deependu_jha

# Extensions
markdown_extensions:
  - abbr
  - admonition
  - attr_list
  - def_list
  - footnotes
  - md_in_html
  - tables
  - pymdownx.arithmatex:
      generic: true
  - pymdownx.betterem:
      smart_enable: all
  - pymdownx.caret
  - pymdownx.details
  - pymdownx.emoji:
      emoji_generator: !!python/name:material.extensions.emoji.to_svg
      emoji_index: !!python/name:material.extensions.emoji.twemoji
  - pymdownx.highlight:
      anchor_linenums: true
      line_spans: __span
      pygments_lang_class: true
  - pymdownx.inlinehilite
  - pymdownx.keys
  - pymdownx.magiclink:
      normalize_issue_symbols: true
      repo_url_shorthand: true
      user: squidfunk
      repo: mkdocs-material
  - pymdownx.mark
  - pymdownx.smartsymbols
  - pymdownx.snippets:
      auto_append:
        - includes/mkdocs.md
  - pymdownx.superfences:
      custom_fences:
        - name: mermaid
          class: mermaid
          format: !!python/name:pymdownx.superfences.fence_code_format
  - pymdownx.tabbed:
      alternate_style: true
      combine_header_slug: true
  - pymdownx.tasklist:
      custom_checkbox: true
  - pymdownx.tilde

extra_javascript:
  - https://polyfill.io/v3/polyfill.min.js?features=es6
  - https://unpkg.com/mathjax@3/es5/tex-mml-chtml.js

# Page tree
nav:
  - Home: index.md
  - Operating Systems:
    - Home: 01-os/index.md
    - Basic Concepts:
      - Introduction:
        - Introduction to OS: 01-os/01-Basic-Concepts/01-introduction/01-introduction-to-os.md
        - Types of OS: 01-os/01-Basic-Concepts/01-introduction/02-types-of-os.md
        - multi-tasking Vs multi-threading: 01-os/01-Basic-Concepts/01-introduction/03-multi-tasking-vs-multi-threading.md
        - Components of OS: 01-os/01-Basic-Concepts/01-introduction/04-components-of-os.md
        - System Calls: 01-os/01-Basic-Concepts/01-introduction/05-system-calls.md
      - Important to Know:
        - How OS boots up: 01-os/01-Basic-Concepts/02-important-to-know/06-how-operating-system-boots-up.md
        - 32 Bit Vs 64 Bit: 01-os/01-Basic-Concepts/02-important-to-know/07-32-Bit_vs_64-Bit-os.md
        - Different storage devices: 01-os/01-Basic-Concepts/02-important-to-know/08-different-STORAGES-used-in-computers.md
    - Process Management:
      - Introduction to Process:
        - Introduction to Process Management: 01-os/02-process-management/01-intro-to-process/01-intro-to-process-management.md
        - Process States & Process Queues: 01-os/02-process-management/01-intro-to-process/02-process-state-n-process-queues.md
        - Swapping, Context Switching, Orphan & Zombie Process: 01-os/02-process-management/01-intro-to-process/03-swapping-context-switching-orphan-n-zombie-process.md
      - Process Scheduling:
        - Introduction to Process Scheduling: 01-os/02-process-management/02-process-scheduling/01-introduction-to-process-scheduling.md
        - FCFS & Convoy Effect: 01-os/02-process-management/02-process-scheduling/02-fcfs-n-convoy-effect.md
        - SJF, Priority Scheduling & Round Robin: 01-os/02-process-management/02-process-scheduling/03-sjf-priority-scheduling-round-robing.md
        - Multi-Level Queue & Multi-Level Feedback Queue: 01-os/02-process-management/02-process-scheduling/04-mlq-n-mlfq.md
        - Comparison b/w different scheduling algorithms: 01-os/02-process-management/02-process-scheduling/05-comparison-between-process-scheduling-algos.md
      - Concurrency & Deadlocks:
        - Introduction to Concurrency: 01-os/02-process-management/03-concurrency-n-deadlocks/01-intro-to-concurrency.md
        - Critical section & Race condition: 01-os/02-process-management/03-concurrency-n-deadlocks/02-critical-section-n-race-condition.md
        - Conditional variable & Semaphore: 01-os/02-process-management/03-concurrency-n-deadlocks/03-conditional-variable-n-semaphore.md


  - DBMS:
    - Home: 02-dbms/index.md
    - Basic Concepts:
      - Introduction:
        - What is DBMS?: 02-dbms/01-introduction/01-dbms.md
        - DBMS architecture: 02-dbms/01-introduction/02-architecture-of-dbms.md
      - Entity-Relationship Model:
        - ER-model: 02-dbms/02-entity-relationship-model/01-er-model.md
      - Relational Model:
        - Relational model in RDBMS: 02-dbms/03-relational-model/01-relational-model.md
      - SQL:
        - Introduction: 02-dbms/04-sql/01-introduction.md
    - Important concepts:
      - Normalization, ACID & Indexing:
        - Normalization: 02-dbms/05-normalization-acid-and-indexing/01-normalization.md
        - ACID properties & transactions: 02-dbms/05-normalization-acid-and-indexing/02-acid-properties-and-transactions.md
        - Implement atomicity & durability: 02-dbms/05-normalization-acid-and-indexing/03-how-to-implement-atomicity-and-durability.md
        - Indexing in DBMS: 02-dbms/05-normalization-acid-and-indexing/04-indexing-in-dbms.md
      - NoSQL & DB types:
        - NoSQL DB: 02-dbms/06-nosql-and-db-types/01-nosql-db.md
        - Types of Database: 02-dbms/06-nosql-and-db-types/02-db-types.md
        - ACID vs BASE: 02-dbms/06-nosql-and-db-types/03-acid-vs-base.md
      - Scaling Databases:
        - Clustering & Replica set: 02-dbms/07-scaling-database/01-clustering-and-replica-set-in-db.md
        - Partitioning & Sharding: 02-dbms/07-scaling-database/02-partitioning-and-sharding.md
        - DB scaling pattern: 02-dbms/07-scaling-database/03-db-scaling-pattern.md
      - Cap theorem & Master-Slave architecture:
        - Cap theorem: 02-dbms/08-cap-theorem-and-master-slave-architecture/01-cap-theorem.md
        - Master-Slave architecture: 02-dbms/08-cap-theorem-and-master-slave-architecture/02-master-slave-architecture.md


  - DSA:
    - Home: 04-dsa/index.md
    - Basic data structures:
      - Sorting:
        - Introduction: 04-dsa/00-basic/01-sorting/01-introduction.md
      - Binary Search:
        - Introduction: 04-dsa/00-basic/02-binary-search/01-introduction.md
      - Bit Manipulation:
          - Introduction: 04-dsa/00-basic/03-bit-manipulation/01-introduction.md
      - Recursion & Backtracking:
          - Introduction: 04-dsa/00-basic/04-recursion-and-backtracking/01-introduction.md

    - Intermediate Data Structures:
      - Linked List:
        - Introduction: 04-dsa/03-intermediate-data-structures/01-linked-list/01-introduction.md
      - Stack:
        - Introduction: 04-dsa/03-intermediate-data-structures/02-stack/01-introduction.md
      - Queue:
          - Introduction: 04-dsa/03-intermediate-data-structures/03-queue/01-introduction.md
      - Sliding window & Two pointers:
          - Introduction: 04-dsa/03-intermediate-data-structures/04-sliding-window-and-two-pointer/01-introduction.md
      - Heap (Priority Queue):
          - Introduction: 04-dsa/03-intermediate-data-structures/05-heap/01-introduction.md
    - Trees:
        - Home: 04-dsa/04-trees/index.md
        - Binary Tree:
          - Introduction: 04-dsa/04-trees/01-binary-tree/01-introduction.md
          - Traversals: 04-dsa/04-trees/01-binary-tree/02-traversals.md
    - Segment & Fenwick Tree:
        - Home: 04-dsa/05-segment-and-fenwick-tree/index.md
        - Segment Tree:
          - Introduction: 04-dsa/05-segment-and-fenwick-tree/01-segment-tree/01-introduction.md
    - Graph:
      - Home: 04-dsa/01-graph/index.md
      - Introduction, BFS & DFS:
        - Basic Concepts & representation: 04-dsa/01-graph/01-intro-bfs-dfs/01-introduction.md
        - Disconnected components: 04-dsa/01-graph/01-intro-bfs-dfs/02-disconnected-components.md
        - Breadth-first-search (BFS): 04-dsa/01-graph/01-intro-bfs-dfs/03-bfs.md
        - Depth-first-search (DFS): 04-dsa/01-graph/01-intro-bfs-dfs/04-dfs.md
        - Bipartite Graph: 04-dsa/01-graph/01-intro-bfs-dfs/05-bipartite-graph.md
      - Cycle detection & topo sort:
        - Cycle detection in Undirected (BFS & DFS): 04-dsa/01-graph/02-cycle-detection-and-topo-sort/01-cycle-detection-undirected-bfs-and-dfs.md
        - Cycle detection in Directed (DFS): 04-dsa/01-graph/02-cycle-detection-and-topo-sort/02-cycle-detection-directed-dfs.md
        - Topological sort (DFS): 04-dsa/01-graph/02-cycle-detection-and-topo-sort/03-topological-sort-dfs.md
        - Topological sort (Kahn's algorithm): 04-dsa/01-graph/02-cycle-detection-and-topo-sort/04-topological-sort-kahn-algorithm.md
        - Cycle detection in Directed (BFS): 04-dsa/01-graph/02-cycle-detection-and-topo-sort/05-cycle-detection-directed-bfs.md
      - Shortest path in Graph:
        - Undirected Graph: 04-dsa/01-graph/03-shortest-path-in-graph/01-shortest-path-in-undirected.md
        - Directed acyclic graph (DAG): 04-dsa/01-graph/03-shortest-path-in-graph/02-shortest-path-in-directed-acyclic-graph.md
        - Dijkstra's algorithm: 04-dsa/01-graph/03-shortest-path-in-graph/03-dijkstra-algorithm.md
        - Bellman-Ford algorithm: 04-dsa/01-graph/03-shortest-path-in-graph/04-bellman-ford-algorithm.md
        - Floyd Warshall algorithm: 04-dsa/01-graph/03-shortest-path-in-graph/05-floyd-warshall-algorithm.md
      - Minimum spanning tree:
        - Minimum spanning tree: 04-dsa/01-graph/04-minimum-spanning-trees/01-minimum-spanning-tree.md
        - Prim's algorithm: 04-dsa/01-graph/04-minimum-spanning-trees/02-prims-algorithm.md
        - Disjoint set union (by Rank & size): 04-dsa/01-graph/04-minimum-spanning-trees/03-disjoint-set-union-by-rank-and-size.md
        - Kruskal's algorithm: 04-dsa/01-graph/04-minimum-spanning-trees/04-kruskal-algorithm.md
      - Important graph algorithms:
        - SCC- Kosaraju's algorithm: 04-dsa/01-graph/05-important-graph-algorithms/01-kosaraju-algorithm.md
        - Bridges in graph: 04-dsa/01-graph/05-important-graph-algorithms/02-bridges-in-graph.md
        - Articulation point in Graph: 04-dsa/01-graph/05-important-graph-algorithms/03-articulation-point-in-graph.md

    - Dynamic Programming:
        - Home: 04-dsa/02-dp/index.md
        - Introduction to DP: 04-dsa/02-dp/introduction.md

  - Design Patterns:
    - Home: 05-design-patterns/index.md
    - Introduction: 05-design-patterns/introduction.md
    - Classification of Design Patterns: 05-design-patterns/01-classification-of-design-patterns.md
    - Concepts & Examples:
      - Index: 05-design-patterns/design-pattern-index.md
      - Creational Patterns:
        - Singleton: 05-design-patterns/02-creational/01-singleton.md
        - Builder: 05-design-patterns/02-creational/02-builder.md
        - Factory: 05-design-patterns/02-creational/03-factory.md
        - Abstract Factory: 05-design-patterns/02-creational/04-abstract-factory.md
        - Prototype: 05-design-patterns/02-creational/05-prototype.md
      - Structural Patterns:
        - Adapter: 05-design-patterns/03-structural/01-adapter.md
        - Bridge: 05-design-patterns/03-structural/02-bridge.md
        - Composite: 05-design-patterns/03-structural/03-composite.md
        - Decorator: 05-design-patterns/03-structural/04-decorator.md
        - Facade: 05-design-patterns/03-structural/05-facade.md
        - Flyweight: 05-design-patterns/03-structural/06-flyweight.md
        - Proxy: 05-design-patterns/03-structural/07-proxy.md
      - Behavioral Patterns:
        - Chain of Responsibility: 05-design-patterns/04-behavioral/01-chain-of-responsibility.md
        - Command: 05-design-patterns/04-behavioral/02-command.md
        - Iterator: 05-design-patterns/04-behavioral/03-iterator.md
        - Mediator: 05-design-patterns/04-behavioral/04-mediator.md
        - Memento: 05-design-patterns/04-behavioral/05-memento.md
        - Observer: 05-design-patterns/04-behavioral/06-observer.md
        - State: 05-design-patterns/04-behavioral/07-state.md
        - Strategy: 05-design-patterns/04-behavioral/08-strategy.md
        - Template Method: 05-design-patterns/04-behavioral/09-template-method.md
        - Visitor: 05-design-patterns/04-behavioral/10-visitor.md
